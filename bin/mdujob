#!/bin/bash

#
# mdujob: create an "mdu" job, wait for it to finish, and emit the output to
# stdout
#

set -o pipefail

mdu_arg0="mdujob"
mdu_asset="/$MANTA_USER/public/manta-mdu-prototype/manta-mdu.tgz"

function main
{
	if [[ -z "$MANTA_USER" ]]; then
		usage "MANTA_USER must be specified in the environment."
	fi

	echo -n "Creating job ... " >&2
	jobid="$(mjob create \
	    --map='find "$MANTA_INPUT_FILE" -type f -printf "%s %k %p\n"' \
	    --asset="$mdu_asset" --init="tar xzf /assets$mdu_asset" \
	    --reduce='node /asset/bin/mdu-reduce.js')" || fail "failed"
	echo "$jobid" >&2

	echo -n "Waiting for job ... " >&2
	mjob watch $jobid > /dev/null || fail "failed"
	echo "done." >&2

	mjob outputs $jobid | xargs mget || fail "failed to fetch outputs"
}

function usage
{
	[[ $# -gt 0 ]] && echo "$mdu_arg0: $@"
	cat <<EOF
usage: mdujob

Given a list of Manta objects on stdin, run a job to generate an ncdu-format
file describing the physical space used by these objects.  See caveats in
README.md.
EOF
	exit 2
}

function fail
{
	echo "$mdu_arg0: $@"
	exit 1
}

main
